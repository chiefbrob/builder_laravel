name: Deploy Foobar

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2 # Use v2 instead of v3

      - name: SSH into repository
        run: |
          ssh-keygen -t rsa -b 4096 -f id_rsa -q -N ""
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          ssh -o StrictHostKeyChecking=no github.com -i id_rsa

      - name: Create installation directory if it does not exist
        run: |
          if [ ! -d /var/www/foobar ]; then
            mkdir -p /var/www/foobar 
          fi

      - name: Create repository directory if it does not exist
        run: |
          if [ ! -d /var/repo/foobar.git ]; then
            git clone https://github.com/$GITHUB_REPOSITORY.git /var/repo/foobar.git 
          fi

      - name: Create post-receive hook
        run: |
          echo '#!/bin/bash' > /var/repo/foobar.git/hooks/post-receive
          echo 'git --work-tree=/var/www/foobar --git-dir=/var/repo/foobar.git checkout -f' >> /var/repo/foobar.git/hooks/post-receive
          chmod +x /var/repo/foobar.git/hooks/post-receive

      - name: Create Nginx configuration file
        run: |
          echo 'server {' > /etc/nginx/sites-available/foobar.conf  # Use sites-available to enable later
          echo '  listen 80;' >> /etc/nginx/sites-available/foobar.conf
          echo '  server_name foobar.com;' >> /etc/nginx/sites-available/foobar.conf
          echo '  root /var/www/foobar;' >> /etc/nginx/sites-available/foobar.conf
          echo '}' >> /etc/nginx/sites-available/foobar.conf
          sudo ln -s /etc/nginx/sites-available/foobar.conf /etc/nginx/sites-enabled/

      - name: Test Nginx configuration
        run: |
          sudo nginx -t

      - name: Restart Nginx
        run: |
          sudo systemctl restart nginx

      - name: Git push to repository
        run: |
          git push origin main
